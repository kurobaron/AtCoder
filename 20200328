Question.A
tmp = input()
S = [0]*6
for i in range(6):
  S[i] = tmp[i]
if S[2] == S[3] and S[4] == S[5]:
  print('Yes')
else:
  print('No')

Question.B
X = int(input())
h1 = X//500
h2 = X%500 - X%500%5
print(h1*1000 + h2)

Question.C
K, N = map(int, input().split())
A = list(map(int, input().split()))

dmax = K - A[N-1] + A[0]
apre = -(K - A[N-1])
for a in A:
  d = a - apre
  if d > dmax:
    dmax = d
  apre = a

print(K - dmax)

Question.D_timeout
N, X, Y = list(map(int, input().split()))

def exp(k, i, i0, d, leng, r, cnt=0, pre=[]):
  if i < 0 or i >= leng:
    return 0
  if i in pre:
    return 0
  pre.append(i)
  if cnt == k:
    for j in range(k):
      if {i0, i} in d[j+1]:
        return 0
    d[k].append({i0, i})
    return 0
  cnt += 1
  if r[i] != 0:
    return exp(k, r[i], i0, d, leng, r, cnt, pre) + exp(k, i-1, i0, d, leng, r, cnt, pre) \
    + exp(k, i+1, i0, d, leng, r, cnt, pre)
  else:
    return exp(k, i-1, i0, d, leng, r, cnt, pre) + exp(k, i+1, i0, d, leng, r, cnt, pre)

r = [0]*N
for i in range(N):
  if i == X-1:
    r[i] = Y-1
  if i == Y-1:
    r[i] = X-1

d = {}
for i in range(1, N):
  d[i] = []

for i in range(1, N):
  for j in range(N):
    exp(i, j, j, d, N, r, pre=[])

for k in range(1,N):
  print(len(d[k]))

Question.D_WA1
N, X, Y = map(int, input().split())

r = [0]*N
for i in range(N):
  if i == X-1:
    r[i] = Y-1
  if i == Y-1:
    r[i] = -1

def exp(k, i, leng, r, cnt=0, flg=0):
  if r[i] < 0:
    if flg == 'branched':
      return 0
  if k == cnt:
    if flg == 'branched':
      if i+1 <= int((X+Y)/2.0):
        return 1
      else:     
        return 0
    elif flg == 'jumped':
      if i+1 > (X+Y)/2.0:
        return 1
      else:
        return 0
    else:
      return 1
  cnt += 1
  if r[i] > 0:
    if flg == 'jumped':
      return 0
    else:
      return exp(k, i+1, leng, r, cnt, flg='branched') \
    + exp(k, r[i], leng, r, cnt, flg='jumped')
  elif r[i] < 0 and flg == 'jumped':
    if i+1 > leng-1:
      return exp(k, i-1, leng, r, cnt, flg)
    else:
      return exp(k, i+1, leng, r, cnt, flg=0) \
      + exp(k, i-1, leng, r, cnt, flg)
  elif flg == 'jumped':
    return exp(k, i-1, leng, r, cnt, flg)
  else:
    if i+1 > leng-1:
      return 0
    return exp(k, i+1, leng, r, cnt, flg)

l = N
for k in range(1, N):
  tmp = 0
  for i in range(N):
    tmp += exp(k, i, l, r)
  print(tmp)

Question.D_WA2
N, X, Y = map(int, input().split())

r = [0]*N
for i in range(N):
  if i == X-1:
    r[i] = Y-1
  if i == Y-1:
    r[i] = -1

def exp(k, i, leng, r, cnt=0, flg=0):
  if r[i] < 0:
    if flg == 1:
      return 0
  if k == cnt:
    if flg == 1:
      if i+1 <= int((X+Y)/2.0):
        return 1
      else:
        return 0
    return 1
  cnt += 1
  if r[i] > 0:
    return exp(k, i+1, leng, r, cnt, flg=1) + exp(k, r[i], leng, r, cnt, flg) 
  else:
    if i+1 > leng-1:
      return 0
    return exp(k, i+1, leng, r, cnt, flg)

l = N
for k in range(1, N):
  tmp = 0
  for i in range(N):
    tmp += exp(k, i, l, r)
  print(tmp)





